@import "open-props/normalize";
@import "open-props/buttons";

html {
  font-size: 14px;
}

input {
  /* Make sure iOS will not zoom when focus */
  font-size: 16px;
}

/* Override some good but annonying open-props styles */
:where(img, svg, video) {
  /* Remove this will blank responsive chart from Nivo */
  height: initial;
  max-width: initial;
}

:where(p, li) {
  max-width: initial;
}

:where(p, ul, ol, dl) {
  font-size: var(--font-size-1);
}

:where(h6) {
  font-size: var(--font-size-2);
}

:where(:not(:active):focus-visible) {
  outline-offset: 0;
}

.btn,
button,
input:is([type="button"], [type="submit"], [type="reset"]) {
  --_accent: var(--violet-10);
  @media (prefers-color-scheme: dark) {
    --_accent: var(--violet-2);
  }
  border: var(--border-size-1) solid var(--_border);
  box-shadow: 0 1px 0 var(--surface-3);
  --_ink-shadow: none;

  &:where(:not(:active):hover) {
    --_highlight-size: 0;
  }
  &[data-focused] {
    outline: 2px solid var(--stone-6);
    outline-offset: -1px;
  }
  &input:is[type="submit"] {
    border-color: var(--_accent);
  }
  outline: none;
  & > svg,
  & > span[aria-hidden] > svg {
    width: 2ch;
    height: 2ch;
    margin: calc(0.75em - 1ch) 0;
  }
}

a.btn {
  margin: 0;
  &:hover {
    text-decoration: none;
  }
}

[hidden]:where(:not([hidden="until-found"])) {
  display: none !important;
}

[data-scope="dialog"] {
  &[data-part="backdrop"] {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background: rgba(255 255 255 / 0.3);
    backdrop-filter: blur(3px);
    display: flex;
    align-items: center;
    justify-content: center;

    &[data-state="open"] {
      animation: var(--animation-fade-in);
    }
    &[data-state="closed"] {
      animation: var(--animation-fade-out);
    }
  }
  &[data-part="positioner"] {
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    padding: var(--size-2);
    display: flex;
    align-items: center;
    justify-content: center;
  }
  &[data-part="content"] {
    outline: none;
    padding: var(--size-4);
    background: var(--surface-1);
    &[data-state="open"] {
      animation: var(--animation-fade-in);
    }

    &[data-state="closed"] {
      animation: var(--animation-fade-out);
    }
    :where(h2) {
      font-size: var(--font-size-3);
      margin-bottom: var(--size-2);
    }
  }
}

[data-scope="listbox"],
[data-scope="select"],
[data-scope="combobox"] {
  &[data-part="positioner"] {
    /* Although listbox should not have this... */
    display: block;
    background: var(--surface-1);
    width: var(--reference-width);
    max-height: var(--available-height);
    overflow: auto;
    box-shadow: var(--shadow-3);
  }
  &[data-part="item-group"]:not(:first-child) {
    margin-top: var(--size-2);
  }

  &[data-part="item-group-label"] {
    margin: var(--size-2);
    font-weight: bold;
    color: var(--text-2);
  }
  &[data-part="content"] {
    padding: var(--size-1) 0;
    border-radius: var(--radius-2);
    border: var(--border-size-1) solid var(--surface-4);
    outline: none;
  }
  &[data-part="item"] {
    margin: var(--size-1) var(--size-2);
    padding: var(--size-2);
    border-radius: var(--radius-2);
    color: var(--text-1);

    &:hover,
    &:focus {
      background-color: var(--surface-2);
    }
    &[data-state="checked"] {
      background-color: var(--surface-3);
    }
  }
}

[data-scope="select"][data-part="trigger"] {
  text-align: left;
}

/* Reset Open Props nornamlize styles */
a:where([data-scope="listbox"]),
a:where([data-scope="combobox"]),
a:where([data-scope="select"]) {
  display: block;
  color: inherit;
  text-decoration: inherit;

  margin-block: 0;
  margin-inline: 0;
  padding-block: 0;
  padding-inline: 0;
}

[data-scope="radio-group"] {
  &[data-part="root"] {
    display: flex;
    flex-direction: column;
    gap: var(--size-2);
  }
  &[data-part="item"] {
    display: flex;
    align-items: center;
    gap: var(--size-1);
    cursor: pointer;
  }
  &[data-part="item-control"] {
    display: block;
    width: 1.286rem;
    height: 1.286rem;
    border: 0.143rem solid var(--stone-8);
    padding: 0 0.286rem;
    border-radius: var(--radius-round);
    transition: all 200ms;
    &[data-state="checked"] {
      border-color: var(--violet-9);
      border-width: 0.429rem;
      padding: 0;
    }
  }
}
button[data-focused] {
  outline: none;
}

[data-scope="switch"] {
  &[data-part="root"] {
    display: flex;
    align-items: center;
    gap: 0.6em;
  }

  &[data-part="control"] {
    width: 2em;
    height: 1.2em;
    border: var(--border-size-2) solid var(--stone-3);
    background: var(--stone-4);
    border-radius: 1.2em;
    transition: all 200ms;
    &[data-state="checked"] {
      border-color: var(--violet-6);
      background: var(--violet-8);
    }
  }
  &[data-part="thumb"] {
    content: "";
    display: block;
    margin: 0.1em;
    width: 0.8em;
    height: 0.8em;
    background-color: var(--stone-1);
    border-radius: 0.4em;
    transition: all 200ms;
    &[data-state="checked"] {
      background-color: var(--violet-1);
      transform: translateX(100%);
    }
  }
}

[data-scope="tabs"] {
  &[data-part="trigger"] {
    /* Clear open-props button style */
    all: unset;
  }
  &[data-part="content"] {
    /* override tabindex in Open props normalize */
    cursor: default;
  }
}

[data-scope="tabs"][data-part="list"],
[data-scope="segment-group"][data-part="root"] {
  display: flex;
  gap: 1rem;
}

[data-scope="tabs"][data-part="trigger"],
[data-scope="segment-group"][data-part="item"] {
  flex-shrink: 0;
  padding: var(--size-2);
  cursor: pointer;
  outline: none;
  border-bottom: 3px solid var(--border-color);
  --border-color: transparent;
  &[data-selected],
  &[data-state="checked"] {
    --border-color: var(--violet-6);
  }
}
