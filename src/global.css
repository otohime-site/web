@import "open-props/normalize";
@import "open-props/buttons";

html {
  background-color: transparent;
  font-size: 14px;
}

:where(p, ul, ol, dl) {
  font-size: var(--font-size-1);
}

:where(h6) {
  font-size: var(--font-size-2);
}

.btn,
button,
input:is([type="button"], [type="submit"], [type="reset"]) {
  border: var(--border-size-1) solid var(--_border);
  box-shadow: 0 1px 0 var(--surface-3);
  --_ink-shadow: none;

  &:where(:not(:active):hover) {
    --_highlight-size: 0;
  }
  &[data-focused] {
    outline: 2px solid var(--stone-6);
    outline-offset: -1px;
  }
  outline: none;
  & > svg,
  & > span[aria-hidden] > svg {
    width: 2ch;
    height: 2ch;
    margin: calc(0.75em - 1ch) 0;
  }
}

a.btn {
  margin: 0;
  &:hover {
    text-decoration: none;
  }
}

.react-aria-ModalOverlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: var(--visual-viewport-height);
  background: rgba(0 0 0 / 0.5);
  display: flex;
  align-items: center;
  justify-content: center;

  &[data-entering] {
    animation: var(--animation-fade-in);
  }
  &[data-existing] {
    animation: var(--animation-fade-out);
  }
}

.react-aria-Dialog {
  outline: none;
}

.react-aria-Modal {
  background: white;
  @media (prefers-color-scheme: dark) {
    background: #121212;
  }
}

.react-aria-Modal :where(h2) {
  font-size: var(--font-size-3);
  margin-bottom: var(--size-2);
}

.react-aria-ListBox {
  border-radius: var(--radius-2);
  border: var(--border-size-1) solid var(--surface-4);
}

.react-aria-Section:not(:first-child) {
  margin-top: var(--size-2);
}

.react-aria-Header {
  margin: var(--size-1);
  font-size: 95%;
  font-weight: bold;
  color: var(--stone-8);
  @media (prefers-color-scheme: dark) {
    color: var(--stone-5);
  }
}

.react-aria-ListBoxItem {
  outline: none;
  margin: var(--size-1) var(--size-2);
  padding: var(--size-2);
  border-radius: var(--radius-2);
  color: var(--stone-12);
  @media (prefers-color-scheme: dark) {
    color: var(--stone-2);
  }

  &[data-hovered],
  &[data-focused] {
    background-color: var(--stone-1);
    @media (prefers-color-scheme: dark) {
      background-color: var(--stone-11);
    }
  }
  &[data-selected] {
    background-color: var(--stone-3);
    @media (prefers-color-scheme: dark) {
      background-color: var(--stone-9);
    }
  }
}

/* Reset Open Props nornamlize styles */
a:where(.react-aria-ListBoxItem),
a:where(.react-aria-Tab) {
  display: block;
  color: inherit;
  text-decoration: inherit;

  margin-block: 0;
  margin-inline: 0;
  padding-block: 0;
  padding-inline: 0;

  &[href]:visited .react-aria-ListBoxItem {
    text-decoration: inherit;
  }
}

.react-aria-RadioGroup {
  display: flex;
  flex-direction: column;
  gap: var(--size-2);
}

.react-aria-Radio {
  display: flex;
  align-items: center;
  gap: var(--size-1);
  cursor: pointer;

  &:before {
    content: "";
    display: block;
    width: 1.286rem;
    height: 1.286rem;
    border: 0.143rem solid var(--stone-8);
    padding: 0 0.286rem;
    border-radius: var(--radius-round);
    transition: all 200ms;
  }

  &[data-pressed]:before {
    border-color: var(--violet-8);
  }

  &[data-selected] {
    &:before {
      border-color: var(--violet-9);
      border-width: 0.429rem;
      padding: 0;
    }
  }
  &[data-focus-visible]:before {
    box-shadow:
      0 0 0 2px var(--violet-3),
      0 0 0 4px var(--violet-8);
  }
}

.react-aria-Popover {
  min-width: var(--trigger-width);
  .react-aria-ListBox {
    display: block;
    background: white;
    @media (prefers-color-scheme: dark) {
      background: #121212;
    }
    width: unset;
    max-height: inherit;
    min-height: unset;
    overflow: auto;
    box-shadow: var(--shadow-3);
  }
}

.react-aria-Button[data-focused] {
  outline: none;
}

.react-aria-Select {
  .react-aria-Button {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }
}

.react-aria-Switch {
  display: flex;
  align-items: center;
  gap: 0.6em;

  .indicator {
    width: 2em;
    height: 1.2em;
    border: var(--border-size-2) solid var(--stone-3);
    background: var(--stone-4);
    border-radius: 1.2em;
    transition: all 200ms;

    &:before {
      content: "";
      display: block;
      margin: 0.1em;
      width: 0.8em;
      height: 0.8em;
      background-color: var(--stone-1);
      border-radius: 0.4em;
      transition: all 200ms;
    }
  }
  &[data-pressed] .indicator,
  &[data-selected] .indicator {
    border-color: var(--violet-6);
    background: var(--violet-8);

    &:before {
      background-color: var(--violet-1);
      transform: translateX(100%);
    }
  }
}

.react-aria-TabList {
  display: flex;
  gap: 1rem;
  .react-aria-Tab {
    border-bottom: 3px solid var(--border-color);
  }
}

.react-aria-Tab {
  flex-shrink: 0;
  padding: var(--size-2);
  cursor: pointer;
  outline: none;
  --border-color: transparent;
  &[data-selected] {
    --border-color: var(--violet-6);
  }
}

.react-aria-TabPanel {
  /* override tabindex in Open props normalize */
  cursor: default;
}
